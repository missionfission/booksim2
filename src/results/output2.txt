BEGIN Configuration File: examples/fattree_config
// $Id: dragonflyconfig 3555 2011-05-16 23:37:55Z dub $

// Copyright (c) 2007-2015, Trustees of The Leland Stanford Junior University
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// Redistributions of source code must retain the above copyright notice, this
// list of conditions and the following disclaimer.
// Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation
// and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.


hold_switch_for_packet=1;

vc_buf_size = 16;


wait_for_tail_credit = 0;

//
// Router architecture
//
vc_allocator = separable_input_first; 
sw_allocator = separable_input_first;
alloc_iters  = 1;

credit_delay   = 2;
routing_delay  = 0;
vc_alloc_delay = 1;
sw_alloc_delay = 1;
st_final_delay = 1;

input_speedup     = 1;
output_speedup    = 1;
internal_speedup  = 1.0;


warmup_periods = 3;
sim_count          = 1;

sample_period  = 10000;  



routing_function = nca;
num_vcs     = 4;

priority = none;
traffic       = uniform;

injection_rate = 0.5;
packet_size = 1;
injection_rate_uses_flits=1;

topology = fattree;


k  = 8;
n  = 4;

watch_out=-;;END Configuration File: examples/fattree_config
Fat Tree
 k = 8 levels = 4
 each switch - total radix =  16
 # of switches = 2048
 # of channels = 24576
 # of nodes ( size of network ) = 4096
Class 0:
Packet latency average = 39.641
	minimum = 6
	maximum = 114
Network latency average = 39.641
	minimum = 6
	maximum = 114
Slowest packet = 7545039
Flit latency average = 39.641
	minimum = 6
	maximum = 114
Slowest flit = 7545039
Fragmentation average = 0
	minimum = 0
	maximum = 0
Injected packet rate average = 0.500002
	minimum = 0.4825 (at node 2178)
	maximum = 0.5164 (at node 1123)
Accepted packet rate average = 0.497996
	minimum = 0.4723 (at node 3653)
	maximum = 0.5233 (at node 2412)
Injected flit rate average = 0.500002
	minimum = 0.4825 (at node 2178)
	maximum = 0.5164 (at node 1123)
Accepted flit rate average= 0.497996
	minimum = 0.4723 (at node 3653)
	maximum = 0.5233 (at node 2412)
Injected packet length average = 1
Accepted packet length average = 1
Total in-flight flits = 82140 (0 measured)
latency change    = 1
throughput change = 1
Class 0:
Packet latency average = 39.6654
	minimum = 6
	maximum = 114
Network latency average = 39.6654
	minimum = 6
	maximum = 114
Slowest packet = 7545039
Flit latency average = 39.6654
	minimum = 6
	maximum = 114
Slowest flit = 7545039
Fragmentation average = 0
	minimum = 0
	maximum = 0
Injected packet rate average = 0.500016
	minimum = 0.48865 (at node 1577)
	maximum = 0.5138 (at node 3850)
Accepted packet rate average = 0.499021
	minimum = 0.483 (at node 2480)
	maximum = 0.51965 (at node 1214)
Injected flit rate average = 0.500016
	minimum = 0.48865 (at node 1577)
	maximum = 0.5138 (at node 3850)
Accepted flit rate average= 0.499021
	minimum = 0.483 (at node 2480)
	maximum = 0.51965 (at node 1214)
Injected packet length average = 1
Accepted packet length average = 1
Total in-flight flits = 81463 (0 measured)
latency change    = 0.000613709
throughput change = 0.00205417
